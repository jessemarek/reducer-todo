{"version":3,"sources":["reducers/todoReducer.js","components/AddItem.js","components/ListItem.js","components/TodoList.js","App.js","index.js"],"names":["initialState","itemList","id","item","completed","inputValue","todoReducer","state","action","type","payload","map","Number","filter","AddItem","props","changeHandler","clearItems","onSubmit","onChange","value","onClick","ListItem","data","markComplete","className","TodoList","useReducer","dispatch","e","target","preventDefault","newItem","Date","now","key","App","ReactDOM","render","document","getElementById"],"mappings":"+MAAaA,EAAe,CACxBC,SAAU,CACN,CACIC,GAAI,WACJC,KAAM,gBACNC,WAAW,GAEf,CACIF,GAAI,WACJC,KAAM,cACNC,WAAW,GAEf,CACIF,GAAI,WACJC,KAAM,eACNC,WAAW,GAEf,CACIF,GAAI,WACJC,KAAM,QACNC,WAAW,GAEf,CACIF,GAAI,WACJC,KAAM,SACNC,WAAW,IAGnBC,WAAY,IAGHC,EAAc,SAACC,EAAOC,GAC/B,OAAOA,EAAOC,MACV,IAAK,qBAED,OAAO,2BACAF,GADP,IAEIF,WAAYG,EAAOE,UAG3B,IAAK,WAGD,OAAO,2BACAH,GADP,IAEIN,SAAS,GAAD,mBAAMM,EAAMN,UAAZ,CAAsBO,EAAOE,UACrCL,WAAY,KAGpB,IAAK,kBAED,OAAO,2BACAE,GADP,IAEIN,SAAS,YAAKM,EAAMN,SAASU,KAAI,SAAAR,GAAI,OAAIA,EAAKD,KAAOU,OAAOJ,EAAOE,SAA1B,2BAA0CP,GAA1C,IAAgDC,WAAYD,EAAKC,YAAcD,QAIhI,IAAK,kBAED,OAAO,2BACAI,GADP,IAEIN,SAAS,YAAKM,EAAMN,SAASY,QAAO,SAAAV,GAAI,OAAKA,EAAKC,gBAG1D,QACI,OAAOG,ICvCJO,EAxBC,SAAAC,GAAU,IAElBV,EAKAU,EALAV,WACAW,EAIAD,EAJAC,cACAC,EAGAF,EAHAE,WACAC,EAEAH,EAFAG,SAIJ,OACI,0BAAMA,SAAUA,GACR,kDACI,2BACIT,KAAK,OACLU,SAAUH,EACVI,MAAOf,IAEX,uCACA,4BAAQI,KAAK,SAASY,QAASJ,GAA/B,sBCALK,EAlBE,SAAAP,GAAU,IAEnBQ,EAGAR,EAHAQ,KACAC,EAEAT,EAFAS,aAIJ,OACI,wBACItB,GAAIqB,EAAKrB,GACTuB,UAAWF,EAAKnB,UAAY,YAAc,GAC1CiB,QAASG,GAERD,EAAKpB,OCwCHuB,EAhDE,WAAO,IAAD,EAEOC,qBAAWrB,EAAaN,GAF/B,mBAEZO,EAFY,KAELqB,EAFK,KASbJ,EAAe,SAAAK,GACjBD,EAAS,CAAEnB,KAAM,kBAAmBC,QAASmB,EAAEC,OAAO5B,MAoB1D,OACI,6BACI,4CAEA,kBAAC,EAAD,CAASG,WAAYE,EAAMF,WAAYW,cA7BzB,SAAAa,GAClBD,EAAS,CAAEnB,KAAM,qBAAsBC,QAASmB,EAAEC,OAAOV,SA4BgBH,WArB1D,WACfW,EAAS,CAAEnB,KAAM,qBAoBgFS,SAjBpF,SAAAW,GACbA,EAAEE,iBAGF,IAAMC,EAAU,CACZ9B,GAAI+B,KAAKC,MACT/B,KAAMI,EAAMF,WACZD,WAAW,GAGfwB,EAAS,CAAEnB,KAAM,WAAYC,QAASsB,OASlC,iEAEA,4BAGQzB,EAAMN,SAASU,KAAI,SAAAR,GAAI,OAAI,kBAAC,EAAD,CAAUgC,IAAKhC,EAAKD,GAAIqB,KAAMpB,EAAMqB,aAAcA,U,MCjClFY,MAPf,WAEE,OACE,kBAAC,EAAD,OCLJC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.35cdfd4d.chunk.js","sourcesContent":["export const initialState = {\r\n    itemList: [\r\n        {\r\n            id: 2345678901,\r\n            item: 'Build New App',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 1234567890,\r\n            item: 'Learn Redux',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 3456789012,\r\n            item: 'Refactor App',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 4567890123,\r\n            item: '?????',\r\n            completed: false\r\n        },\r\n        {\r\n            id: 5678901234,\r\n            item: 'Profit',\r\n            completed: false\r\n        }\r\n    ],\r\n    inputValue: ''\r\n}\r\n\r\nexport const todoReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'CHANGE_INPUT_VALUE':\r\n            //Store the value of the input in state\r\n            return {\r\n                ...state, \r\n                inputValue: action.payload\r\n            }\r\n\r\n        case 'ADD_ITEM':\r\n            \r\n            //Add the newItem to the list and reset the input value\r\n            return {\r\n                ...state, \r\n                itemList: [...state.itemList, action.payload],\r\n                inputValue: ''\r\n            }\r\n\r\n        case 'TOGGLE_COMPLETE':\r\n            //Toggle the completed: value of the list item that was clicked\r\n            return {\r\n                ...state, \r\n                itemList: [...state.itemList.map(item => item.id === Number(action.payload) ? { ...item, completed: !item.completed } : item)]\r\n            }\r\n\r\n\r\n        case 'CLEAR_COMPLETED':\r\n            //Remove any items from the list that have a completed: true value\r\n            return {\r\n                ...state, \r\n                itemList: [...state.itemList.filter(item => !item.completed)]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import React from 'react'\r\n\r\nconst AddItem = props => {\r\n    const {\r\n        inputValue,\r\n        changeHandler,\r\n        clearItems,\r\n        onSubmit\r\n\r\n    } = props\r\n\r\n    return(\r\n        <form onSubmit={onSubmit}>\r\n                <label>Add to List:&nbsp;\r\n                    <input \r\n                        type=\"text\"\r\n                        onChange={changeHandler}\r\n                        value={inputValue} \r\n                    />\r\n                    <button>Add</button>\r\n                    <button type=\"button\" onClick={clearItems}>Clear Completed</button>\r\n                </label>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default AddItem","import React from 'react'\r\n\r\nconst ListItem = props => {\r\n    const {\r\n        data,\r\n        markComplete\r\n\r\n    } = props\r\n\r\n    return (\r\n        <li\r\n            id={data.id}\r\n            className={data.completed ? 'completed' : ''}\r\n            onClick={markComplete}\r\n        >\r\n            {data.item}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default ListItem","import React, { useReducer } from 'react'\r\nimport { initialState, todoReducer } from '../reducers/todoReducer'\r\n\r\n//Components\r\nimport AddItem from './AddItem'\r\nimport ListItem from './ListItem'\r\n\r\nconst TodoList = () => {\r\n\r\n    const [state, dispatch] = useReducer(todoReducer, initialState)\r\n\r\n    /******************** CALLBACKS ********************/\r\n    const changeHandler = e => {\r\n        dispatch({ type: 'CHANGE_INPUT_VALUE', payload: e.target.value })\r\n    }\r\n\r\n    const markComplete = e => {\r\n        dispatch({ type: 'TOGGLE_COMPLETE', payload: e.target.id })\r\n    }\r\n\r\n    const clearItems = () => {\r\n        dispatch({ type: 'CLEAR_COMPLETED' })\r\n    }\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault()\r\n        \r\n        //Create a new ToDo item named from the input value\r\n        const newItem = {\r\n            id: Date.now(),\r\n            item: state.inputValue,\r\n            completed: false\r\n        }\r\n\r\n        dispatch({ type: 'ADD_ITEM', payload: newItem })\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>My ToDo List</h2>\r\n\r\n            <AddItem inputValue={state.inputValue} changeHandler={changeHandler} clearItems={clearItems} onSubmit={onSubmit} />\r\n\r\n            <p>Click an item to mark it complete!</p>\r\n\r\n            <ol>\r\n                {\r\n                    //Map through itemList and create an <li> for each item\r\n                    state.itemList.map(item => <ListItem key={item.id} data={item} markComplete={markComplete} />)\r\n                }\r\n            </ol>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React from 'react'\r\n\r\n//Components\r\nimport TodoList from './components/TodoList'\r\n\r\n//Styles\r\nimport './App.css'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <TodoList />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}